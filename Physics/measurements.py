import numpy as np
from math import sqrt
from scipy.interpolate import interp2d

# === Computations


def x_y_map(data):
  (xs, ys, zs) = data
  xymap = {}

  for (x, y, z) in zip(xs, ys, zs):
    if not str(x) in xymap:
      xymap[str(x)] = {}
    xymap[str(x)][str(y)] = z
    
  return xymap


def comp_prereqs():
  # (x1, y1, x2, y2)
  pts = [
    (10.0, 4.0, 12.0, 6.0),
    (13.0, 2.0, 15.0, 4.0),
    (17.0, 2.0, 19.0, 4.0)
  ]

  xs0, ys0, vs0 = load_data_0()
  xymap0 = x_y_map((xs0, ys0, vs0))
  interp0 = interp2d(xs0, ys0, vs0)
  for (x1, y1, x2, y2) in pts:
    if (x1, y1) not in xymap0:
      xymap0[str(x1)] = {str(y1): interp0(x1, y1)[0], str(y2): interp0(x1, y2)[0]}
    if (x2, y2) not in xymap0:
      xymap0[str(x2)] = {str(y1): interp0(x2, y1)[0], str(y2): interp0(x2, y2)[0]}

  xymap1 = x_y_map(load_data_1())    
  xymap2 = x_y_map(load_data_2())

  return (pts, xymap0, xymap1, xymap2)


# === Formatting


def print_table(data):
  (xs, ys, zs) = data

  all_xs = set()
  y_x_map = {}

  for (x, y, z) in zip(xs, ys, zs):
    if not y in y_x_map:
      y_x_map[y] = {}
    y_x_map[y][x] = z
    all_xs.add(x)

  all_xs = sorted(list(all_xs))

  print('\\begin{tabular}{|l*{' + str(len(all_xs)) + '}{|c}|}')
  print('x =  & ' + " & ".join([str(x) for x in all_xs]) + ' \\\\ \\hline')

  for (y, x_map) in sorted(y_x_map.items()):
    x_cols = " & ".join([str(x_map[x]) if x in x_map else '' for x in all_xs])
    print(f'y = {y} & {x_cols} \\\\')

  print('\\end{tabular}')


# === Experiment data


def load_data_0():
  data = []
  def add_x(x, yz): [data.append((x, y, z)) for (y, z) in yz]
  
  add_x(2, [(2, 1.3), (4, 1.1), (6, 1.0), (8, 1.1), (10, 1.0), (12, 1.1), (14, 1.1), (16, 1.2)])
  add_x(7, [(2, 3.3), (4, 3.3), (6, 3.3), (8, 3.3), (10, 3.3), (12, 3.3), (14, 3.4), (16, 3.4)])
  add_x(12, [(2, 5.7), (4, 5.7), (6, 5.7), (8, 5.7), (10, 5.6), (12, 5.6), (14, 5.6), (16, 5.6)])
  add_x(17, [(2, 8.0), (4, 8.0), (6, 8.0), (8, 8.0), (10, 7.9), (12, 7.9), (14, 7.9), (16, 8.0)])
  add_x(22, [(2, 10.4), (4, 10.4), (6, 10.4), (8, 10.4), (10, 10.4), (12, 10.4), (14, 10.3), (16, 10.3)])
  add_x(27, [(2, 12.6), (4, 12.7), (6, 12.8), (8, 12.9), (10, 12.9), (12, 12.9), (14, 12.8), (16, 12.8)])
  
  return (np.array(data)[:, 0], np.array(data)[:, 1], np.array(data)[:, 2])


def load_data_1():
  data = []
  def add_x(x, yz): [data.append((x, y, z)) for (y, z) in yz]
  
  add_x(4, [(2, 2.5), (4, 2.5), (6, 2.5), (8, 2.5), (10, 2.5), (12, 2.5), (14, 2.5), (16, 2.5)])
  add_x(6, [(2, 3.5), (4, 3.6), (6, 3.7), (8, 3.8), (10, 3.9), (12, 3.8), (14, 3.7), (16, 3.7)])
  add_x(7, [(2, 4.0), (4, 4.2), (6, 4.3), (8, 4.4), (10, 4.6), (12, 4.5), (14, 4.3), (16, 4.2)])
  add_x(8, [(2, 4.5), (3, 4.6), (4, 4.7), (5, 4.8), (6, 4.9), (7, 5.0), (8, 5.1), (9, 5.2), (10, 5.3),
            (11, 5.3), (12, 5.2), (13, 5.1), (14, 4.9), (15, 4.7), (16, 4.7), (17, 4.6), (18, 4.5)])
  add_x(9, [(2, 5.0), (3, 5.1), (4, 5.2), (5, 5.4), (6, 5.6), (7, 5.6), (8, 5.6), (12, 5.9), (13, 5.7),
            (14, 5.5), (15, 5.4), (16, 5.2), (17, 5.0)])
  add_x(10, [(2, 5.5), (3, 5.6), (4, 5.7), (5, 6.0), (6, 6.2), (14, 6.1), (15, 5.8), (16, 5.6),
             (17, 5.5), (18, 5.4)])
  add_x(11, [(2, 5.9), (3, 6.0), (4, 6.2), (5, 6.4), (8, 7.0), (15, 6.3),
             (16, 6.0), (17, 5.9), (18, 5.8)])
  add_x(12, [(2, 6.2), (3, 6.2), (4, 6.4), (16, 6.4), (17, 6.2), (18, 6.1)])
  add_x(13, [(2, 6.5), (3, 6.6), (4, 6.7), (16, 6.6), (17, 6.5), (18, 6.4)])
  add_x(15, [(2, 7.0), (3, 7.0), (17, 6.9)])
  add_x(17, [(2, 7.6), (3, 7.4), (4, 7.3), (5, 7.0), (14, 7.3), (17, 7.4), (18, 7.5)])
  add_x(19, [(2, 8.3), (3, 8.1), (4, 8.0), (5, 7.8), (15, 7.7), (16, 8.0), (17, 8.1), (18, 8.2)])
  add_x(21, [(2, 9.2), (3, 9.1), (4, 9.0), (5, 8.8), (6, 8.7), (7, 8.5), (8, 8.3), (12, 8.1), (13, 8.3),
             (14, 8.5), (15, 8.7), (16, 8.9), (17, 9.0), (18, 9.1)])
  add_x(23, [(2, 10.2), (3, 10.1), (4, 10.1), (5, 10.1), (6, 10.0), (7, 9.8), (8, 9.7), (9, 9.6), (10, 9.6),
             (11, 9.6), (12, 9.7), (13, 9.7), (14, 9.8), (16, 10.0)])
  add_x(26, [(2, 11.7), (4, 11.8), (6, 11.8), (8, 11.8), (10, 11.8), (12, 11.7), (14, 11.7), (16, 11.7)])

  data.append((12.5, 4, 6.5))
  data.append((17.5, 4, 7.4))
  data.append((12.5, 16, 6.4))
  data.append((17.5, 16, 7.5))

  return (np.array(data)[:, 0], np.array(data)[:, 1], np.array(data)[:, 2])


def load_data_2():
  data = []
  def add_x(x, yz): [data.append((x, y, z)) for (y, z) in yz]
    
  add_x(4, [(2, 2.2), (4, 2.1), (6, 2.1), (8, 2.1), (10, 2.1), (12, 2.1), (14, 2.2), (16, 2.2)])
  add_x(6, [(2, 3.0), (4, 3.1), (6, 3.1), (8, 3.1), (10, 3.1), (12, 3.1), (14, 3.1), (16, 3.1)])
  add_x(8, [(2, 4.0), (4, 4.0), (6, 4.1), (8, 4.2), (10, 4.2), (12, 4.2), (14, 4.1), (16, 4.1)])
  add_x(9, [(2, 4.5), (4, 4.5), (6, 4.6), (8, 4.7), (9, 4.8), (10, 4.8), (11, 4.7), (12, 4.7), (14, 4.6),
            (16, 4.5), (18, 4.5)])
  add_x(10, [(2, 4.9), (4, 5.0), (6, 5.1), (7, 5.2), (8, 5.3), (9, 5.3), (10, 5.4), (11, 5.3), (12, 5.2),
             (13, 5.1), (14, 5.1), (16, 5.0), (18, 4.9)])
  add_x(11, [(2, 5.4), (4, 5.4), (6, 5.5), (7, 5.6), (8, 5.7), (9, 5.9), (11, 5.9), (12, 5.7), (13, 5.6),
             (14, 5.5), (16, 5.4), (18, 5.3)])
  add_x(12, [(2, 5.8), (4, 5.8), (6, 6.0), (7, 6.1), (8, 6.2), (12, 6.2), (13, 6.1), (14, 6.0), (16, 5.8)])
  add_x(13, [(2, 6.2), (4, 6.2), (6, 6.4), (7, 6.5), (13, 6.5), (14, 6.4), (15, 6.3), (16, 6.2)])
  add_x(14, [(2, 6.6), (4, 6.6), (6, 6.7), (14, 6.7), (15, 6.6), (16, 6.6)])
  add_x(15, [(2, 7.0), (4, 7.0), (6, 7.0), (14, 7.0), (15, 7.0), (16, 7.0)])
  add_x(16, [(2, 7.4), (4, 7.4), (6, 7.3), (14, 7.3), (15, 7.3), (16, 7.4)])
  add_x(17, [(2, 7.8), (4, 7.7), (6, 7.6), (10, 7.6), (14, 7.6), (15, 7.7), (16, 7.8)])
  add_x(18, [(2, 8.2), (4, 8.1), (6, 7.9), (9, 7.8), (10, 7.9), (11, 7.9), (14, 8.0),
             (15, 8.1), (16, 8.2), (17, 8.2)])
  add_x(19, [(2, 8.7), (4, 8.6), (6, 8.3), (8, 8.2), (9, 8.3), (10, 8.4), (11, 8.3), (12, 8.3),
             (14, 8.4), (15, 8.5), (16, 8.6), (18, 8.7)])
  add_x(20, [(2, 9.1), (4, 9.0), (6, 8.9), (7, 8.8), (8, 8.8), (9, 8.8), (10, 8.9), (11, 8.9),
             (12, 8.9), (13, 8.9), (14, 9.0), (15, 9.1), (16, 9.1), (18, 9.2)])
  add_x(22, [(2, 10.1), (4, 10.1), (6, 10.0), (8, 10.0), (10, 10.0), (12, 10.0), (14, 10.0), (16, 10.1)])
  add_x(24, [(2, 11.1), (4, 11.1), (6, 11.1), (8, 11.1), (10, 11.1), (12, 11.1), (14, 11.1), (16, 11.1)])
  
  data.append((13.5, 7, 6.7))
  data.append((12.5, 8, 6.5))
  data.append((11.5, 9, 6.1))
  data.append((10.5, 10, 5.7))
  data.append((11.5, 11, 6.1))
  data.append((12.5, 12, 6.5))
  data.append((13.5, 13, 6.7))
  data.append((18.5, 12, 8.0))
  data.append((17.5, 11, 7.7))
  data.append((16.5, 10, 7.4))
  data.append((17.5, 9, 7.6))
  data.append((18.5, 8, 7.9))

  return (np.array(data)[:, 0], np.array(data)[:, 1], np.array(data)[:, 2])
